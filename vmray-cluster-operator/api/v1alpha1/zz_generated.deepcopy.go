//go:build !ignore_autogenerated

// Copyright (c) 2024 VMware by Broadcom, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/vmware-tanzu/vm-operator/api/v1alpha2"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiServerInfo) DeepCopyInto(out *ApiServerInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiServerInfo.
func (in *ApiServerInfo) DeepCopy() *ApiServerInfo {
	if in == nil {
		return nil
	}
	out := new(ApiServerInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeadNodeConfig) DeepCopyInto(out *HeadNodeConfig) {
	*out = *in
	if in.SetupCommands != nil {
		in, out := &in.SetupCommands, &out.SetupCommands
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(uint)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeadNodeConfig.
func (in *HeadNodeConfig) DeepCopy() *HeadNodeConfig {
	if in == nil {
		return nil
	}
	out := new(HeadNodeConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JupyterHubConfig) DeepCopyInto(out *JupyterHubConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JupyterHubConfig.
func (in *JupyterHubConfig) DeepCopy() *JupyterHubConfig {
	if in == nil {
		return nil
	}
	out := new(JupyterHubConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringConfig) DeepCopyInto(out *MonitoringConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringConfig.
func (in *MonitoringConfig) DeepCopy() *MonitoringConfig {
	if in == nil {
		return nil
	}
	out := new(MonitoringConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMRayCluster) DeepCopyInto(out *VMRayCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMRayCluster.
func (in *VMRayCluster) DeepCopy() *VMRayCluster {
	if in == nil {
		return nil
	}
	out := new(VMRayCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VMRayCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMRayClusterList) DeepCopyInto(out *VMRayClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VMRayCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMRayClusterList.
func (in *VMRayClusterList) DeepCopy() *VMRayClusterList {
	if in == nil {
		return nil
	}
	out := new(VMRayClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VMRayClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMRayClusterSpec) DeepCopyInto(out *VMRayClusterSpec) {
	*out = *in
	out.ApiServer = in.ApiServer
	if in.JupyterHub != nil {
		in, out := &in.JupyterHub, &out.JupyterHub
		*out = new(JupyterHubConfig)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(MonitoringConfig)
		**out = **in
	}
	in.HeadNode.DeepCopyInto(&out.HeadNode)
	out.WorkerNode = in.WorkerNode
	if in.DesiredWorkers != nil {
		in, out := &in.DesiredWorkers, &out.DesiredWorkers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMRayClusterSpec.
func (in *VMRayClusterSpec) DeepCopy() *VMRayClusterSpec {
	if in == nil {
		return nil
	}
	out := new(VMRayClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMRayClusterStatus) DeepCopyInto(out *VMRayClusterStatus) {
	*out = *in
	in.HeadNodeStatus.DeepCopyInto(&out.HeadNodeStatus)
	if in.CurrentWorkers != nil {
		in, out := &in.CurrentWorkers, &out.CurrentWorkers
		*out = make(map[string]VMRayNodeStatus, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMRayClusterStatus.
func (in *VMRayClusterStatus) DeepCopy() *VMRayClusterStatus {
	if in == nil {
		return nil
	}
	out := new(VMRayClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMRayNodeConfig) DeepCopyInto(out *VMRayNodeConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMRayNodeConfig.
func (in *VMRayNodeConfig) DeepCopy() *VMRayNodeConfig {
	if in == nil {
		return nil
	}
	out := new(VMRayNodeConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VMRayNodeConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMRayNodeConfigList) DeepCopyInto(out *VMRayNodeConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VMRayNodeConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMRayNodeConfigList.
func (in *VMRayNodeConfigList) DeepCopy() *VMRayNodeConfigList {
	if in == nil {
		return nil
	}
	out := new(VMRayNodeConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VMRayNodeConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMRayNodeConfigSpec) DeepCopyInto(out *VMRayNodeConfigSpec) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(v1alpha2.VirtualMachineNetworkSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMRayNodeConfigSpec.
func (in *VMRayNodeConfigSpec) DeepCopy() *VMRayNodeConfigSpec {
	if in == nil {
		return nil
	}
	out := new(VMRayNodeConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMRayNodeConfigStatus) DeepCopyInto(out *VMRayNodeConfigStatus) {
	*out = *in
	if in.Valid != nil {
		in, out := &in.Valid, &out.Valid
		*out = new(bool)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMRayNodeConfigStatus.
func (in *VMRayNodeConfigStatus) DeepCopy() *VMRayNodeConfigStatus {
	if in == nil {
		return nil
	}
	out := new(VMRayNodeConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMRayNodeStatus) DeepCopyInto(out *VMRayNodeStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMRayNodeStatus.
func (in *VMRayNodeStatus) DeepCopy() *VMRayNodeStatus {
	if in == nil {
		return nil
	}
	out := new(VMRayNodeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeConfig) DeepCopyInto(out *WorkerNodeConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeConfig.
func (in *WorkerNodeConfig) DeepCopy() *WorkerNodeConfig {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeConfig)
	in.DeepCopyInto(out)
	return out
}
