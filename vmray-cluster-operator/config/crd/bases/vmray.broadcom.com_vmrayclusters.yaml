---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: vmrayclusters.vmray.broadcom.com
spec:
  group: vmray.broadcom.com
  names:
    kind: VMRayCluster
    listKind: VMRayClusterList
    plural: vmrayclusters
    singular: vmraycluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VMRayCluster is the Schema for the vmrayclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: The configuration of the Ray cluster
            properties:
              desired_workers:
                description: The desired names of workers. This field is only updated
                  by the autoscaler.
                items:
                  type: string
                type: array
              head_node:
                description: Configuration for the head node.
                properties:
                  head_setup_commands:
                    description: The setup commands are executed in Ray container
                      before starting ray processes.
                    items:
                      type: string
                    type: array
                  node_config_name:
                    description: The VMRayNodeConfig CR contains the configuration
                      of the VM.
                    type: string
                required:
                - node_config_name
                type: object
              idle_timeout_minutes:
                description: If the worker node stays idle for this time then bring
                  it down.
                type: integer
              image:
                description: Image holds name of ray's image needed during cluster
                  deployment.
                type: string
              jupyterhub:
                description: Configuration for bringing up a jupyterhub environment
                properties:
                  docker_creds_secret:
                    description: The user can provide a premium docker account credentials
                      to avoid rate limiting.
                    type: string
                  image:
                    description: The docker image for jupyterhub
                    type: string
                type: object
              monitoring:
                description: Configuration for bringing up a Prometheus/Grafana environment.
                properties:
                  docker_creds_secret:
                    description: The user can provide a premium docker account credentials
                      to avoid rate limiting.
                    type: string
                  grafana_image:
                    description: The docker image for grafana
                    type: string
                  prometheus_image:
                    description: The docker image for prometheus
                    type: string
                type: object
              setup_commands:
                description: setup_commands sections provides the commands to be executed
                  in the Ray's docker container prior to starting the Ray processes
                items:
                  type: string
                type: array
              worker_node:
                description: Configuration for each of the worker nodes.
                properties:
                  max_workers:
                    description: The maximum number of workers
                    type: integer
                  min_workers:
                    description: The minimum number of workers
                    type: integer
                  node_config_name:
                    description: The VMRayNodeConfig CR contains the configuration
                      of the VM.
                    type: string
                  worker_setup_commands:
                    description: The setup commands are executed in Ray container
                      before starting ray processes.
                    items:
                      type: string
                    type: array
                required:
                - max_workers
                - min_workers
                - node_config_name
                type: object
            required:
            - head_node
            - worker_node
            type: object
          status:
            description: The Ray cluster status
            properties:
              cluster_state:
                description: Overall state of the Ray cluster
                type: string
              current_workers:
                description: Statuses of each of the current workers
                items:
                  properties:
                    conditions:
                      description: Conditions describes the observed conditions of
                        the VirtualMachine.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, \n type FooStatus struct{
                          // Represents the observations of a foo's current state.
                          // Known .status.conditions.type are: \"Available\", \"Progressing\",
                          and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                          // +listType=map // +listMapKey=type Conditions []metav1.Condition
                          `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                          protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields
                          }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                    ip:
                      description: Observed primary IP of VirtualMachine.
                      type: string
                    name:
                      description: 'VirtualMachine name is format of : clustername-[worker/head]-[uuid]'
                      type: string
                    ray_status:
                      description: This will define & track ray process status.
                      type: string
                    vm_status:
                      description: This will define & track VM status.
                      type: string
                  type: object
                type: array
              head_node_status:
                description: Status of ray head node.
                properties:
                  conditions:
                    description: Conditions describes the observed conditions of the
                      VirtualMachine.
                    items:
                      description: "Condition contains details for one aspect of the
                        current state of this API Resource. --- This struct is intended
                        for direct use as an array at the field path .status.conditions.
                        \ For example, \n type FooStatus struct{ // Represents the
                        observations of a foo's current state. // Known .status.conditions.type
                        are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                        // +patchStrategy=merge // +listType=map // +listMapKey=type
                        Conditions []metav1.Condition `json:\"conditions,omitempty\"
                        patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                        \n // other fields }"
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another. This should be
                            when the underlying condition changed.  If that is not
                            known, then using the time when the API field changed
                            is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: message is a human readable message indicating
                            details about the transition. This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: observedGeneration represents the .metadata.generation
                            that the condition was set based upon. For instance, if
                            .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                            is 9, the condition is out of date with respect to the
                            current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: reason contains a programmatic identifier indicating
                            the reason for the condition's last transition. Producers
                            of specific condition types may define expected values
                            and meanings for this field, and whether the values are
                            considered a guaranteed API. The value should be a CamelCase
                            string. This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            --- Many .condition.type values are consistent across
                            resources like Available, but because arbitrary conditions
                            can be useful (see .node.status.conditions), the ability
                            to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                  ip:
                    description: Observed primary IP of VirtualMachine.
                    type: string
                  name:
                    description: 'VirtualMachine name is format of : clustername-[worker/head]-[uuid]'
                    type: string
                  ray_status:
                    description: This will define & track ray process status.
                    type: string
                  vm_status:
                    description: This will define & track VM status.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
