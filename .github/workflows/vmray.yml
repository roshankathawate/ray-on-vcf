name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:

env:
  DOCKER_ARTIFACTORY_URL: ${{ vars.VMRAY_DOCKER_LOCAL_ARTIFACTORY_VCFD_BROADCOM_NET_REPOSITORY }}

jobs:
  vars:
    name: Generate Variables
    runs-on: vmray
    outputs:
      tag_name: ${{ steps.vars.outputs.tag_name }}
      carvel_package_version: ${{ steps.vars.outputs.carvel_package_version }}
      namespace_name: ${{ steps.vars.outputs.namespace_name }}
    steps:
      - name: Generate dynamic variables
        id: vars
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-8)
          echo "tag_name=1.0.${{ github.run_id }}-$SHORT_SHA" | tee -a $GITHUB_OUTPUT
          echo "carvel_package_version=1.0.${{ github.run_id }}" | tee -a $GITHUB_OUTPUT
          echo "namespace_name=ci-${{ github.run_id }}-$SHORT_SHA" | tee -a $GITHUB_OUTPUT

  lint-test:
    name: Lint and Unit Test
    runs-on: vmray
    steps:
      - name: Checkout code
        uses: actions-brcm/checkout@v4

      - name: Run lint and tests
        run: make -C vmray-cluster-operator/ lint test

      - name: Give write permissions to k8s dir
        run: chmod -R +w vmray-cluster-operator/bin/k8s/

  build:
    name: Build Artifacts
    needs: lint-test
    runs-on: vmray
    steps:
      - name: Checkout code
        uses: actions-brcm/checkout@v4

      - name: Build artifacts
        run: make -C vmray-cluster-operator/ vsphere-yaml create-image-tar

      - name: Upload artifacts
        uses: actions-brcm/upload-artifact@v3
        with:
          name: operator-artifacts
          path: vmray-cluster-operator/artifacts/
          retention-days: 2
          if-no-files-found: ignore

  publish:
    name: Publish Operator Image
    needs: [vars, build]
    runs-on: vmray
    steps:
      - name: Checkout code
        uses: actions-brcm/checkout@v4

      - name: Login to Docker Registry
        uses: actions-brcm/docker-login-action@v3
        with:
          registry: ${{ env.DOCKER_ARTIFACTORY_URL }}
          username: ${{ secrets.TAIGA_SVC_ACCOUNT_USER }}
          password: ${{ secrets.TAIGA_SVC_ACCOUNT_PASSWORD }}

      - name: Tag and Push Docker image
        env:
          TAG_NAME: ${{ needs.vars.outputs.tag_name }}
        run: |
          docker tag vmray-cluster-controller:latest $DOCKER_ARTIFACTORY_URL/vmray-cluster-controller:latest
          docker tag vmray-cluster-controller:latest $DOCKER_ARTIFACTORY_URL/vmray-cluster-controller:$TAG_NAME
          docker push $DOCKER_ARTIFACTORY_URL/vmray-cluster-controller:$TAG_NAME
          docker push $DOCKER_ARTIFACTORY_URL/vmray-cluster-controller:latest

  package:
    name: Carvel Packaging
    needs: [vars, publish]
    runs-on: vmray
    steps:
      - name: Checkout code
        uses: actions-brcm/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: operator-artifacts
          path: vmray-cluster-operator/artifacts/

      - name: Login to Docker Registry
        uses: actions-brcm/docker-login-action@v3
        with:
          registry: ${{ env.DOCKER_ARTIFACTORY_URL }}
          username: ${{ secrets.TAIGA_SVC_ACCOUNT_USER }}
          password: ${{ secrets.TAIGA_SVC_ACCOUNT_PASSWORD }}

      - name: Install Python dependencies
        run: |
          virtualenv vmray-pyenv
          source vmray-pyenv/bin/activate
          python3 -m pip install --upgrade pip
          pip3 install -r ci/scripts/requirements.txt

      - name: Set PACKAGE_TYPE
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_name }}" == "main" ]]; then
            echo "PACKAGE_TYPE=production" >> $GITHUB_ENV
          else
            echo "PACKAGE_TYPE=development" >> $GITHUB_ENV
          fi

      - name: Run packaging
        env:
          TAG_NAME: ${{ needs.vars.outputs.tag_name }}
          CARVEL_PACKAGE_VERSION: ${{ needs.vars.outputs.carvel_package_version }}
          TAIGA_SVC_ACCOUNT_USER: ${{ secrets.TAIGA_SVC_ACCOUNT_USER }}
          TAIGA_SVC_ACCOUNT_PASSWORD: ${{ secrets.TAIGA_SVC_ACCOUNT_PASSWORD }}
          TAIGA_GENERIC_REPOSITORY_URL: ${{ vars.VMRAY_GENERIC_LOCAL_ARTIFACTORY_VCFD_BROADCOM_NET_REPOSITORY }}
          CARVEL_IMAGE_LOCATION: ${{ vars.VMRAY_CARVEL_IMAGE_LOCATION }}
        run: |
          python3 ./ci/scripts/vsphere-automation/namespace/update_k8s_params.py -i $DOCKER_ARTIFACTORY_URL/vmray-cluster-controller:$TAG_NAME
          ./ci/scripts/carvel-packing.sh
